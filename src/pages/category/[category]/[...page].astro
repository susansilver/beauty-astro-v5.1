---
import { getCollection } from "astro:content";
import BaseHead from "../../../components/base/BaseHead.astro";
import Header from "../../../components/base/Header.astro";
import Footer from "../../../components/base/Footer.astro";

export async function getStaticPaths({ paginate }) {
  const allPosts = await getCollection("blog");

  const allCategories = [
    ...new Set(allPosts.flatMap((post) => post.data.categories)),
  ];

  return allCategories.flatMap((category) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.categories.includes(category)
    );
    return paginate(filteredPosts, {
      params: { category },
      pageSize: 6,
    });
  });
}

interface BlogPostEntry {
  slug: string;
  data: {
    title: string;
    description: string;
    heroImage: {
      src: string;
      alt: string;
    };
    draft: boolean;
    pubDate: string; // or Date if you prefer to parse it beforehand
  };
}

interface Props {
  page: {
    data: BlogPostEntry[];
    currentPage: number;
    url: {
      prev: string;
      next: string;
    };
  };
}

const { page }: { page: Props["page"] } = Astro.props;
---

<html lang="en">
  <head>
    <BaseHead
      title={params.category.toLowerCase().replace(/-/g, " ")}
      description={`Category archive for ${params.category.replace(/-/g, " ")}`}
    />
  </head>

  <body class="dark:bg-slate-800 dark:text-white-50">
    <Header />
    <main>
      <h1 class="text-3xl p-5">
        Category: {params.category.toLowerCase().replace(/-/g, " ")}
      </h1>

      <h2 class="text-3xl p-5">Page {page.currentPage}</h2>
      <div class="flex flex-row justify-around items-center box">
        <a href={page.url.prev} class="no-underline hover:text-secondary-900"
          ><div
            class="lar p-3 bg-slate-200 rounded-xl text-black-900 max-w-fit"
          >
            ❮ Prev
          </div>
        </a>
        <a href={page.url.next} class="no-underline">
          <div class="lar p-3 bg-slate-200 rounded-xl text-black-900 max-w-fit">
            Next ❯
          </div>
        </a>
      </div>
      <div class="grid-cols-12 grid text-balance" id="container">
        {
          page.data
            .filter((blogPostEntry) => !blogPostEntry.data.draft)
            .sort((a, b) => a.data.title.localeCompare(b.data.title))

            .map((blogPostEntry) => (
              <div class="relative p-3">
                <Card
                  url={`/${blogPostEntry.slug}`}
                  img={blogPostEntry.data.heroImage.src}
                  alt={blogPostEntry.data.heroImage.alt}
                  title={blogPostEntry.data.title}
                  footer=""
                >
                  <p class="m-5">{blogPostEntry.data.description}</p>
                </Card>
                <button>
                  <a
                    href={`/${blogPostEntry.slug}`}
                    class="absolute hidden md:flex bottom-5 right-5 outline-1 outline-accent-900 mt-8 mx-3 md:text-2xl p-2 text-black-900 bg-accent-400 rounded hover:rounded-xl hover:bg-accent-600"
                  >
                    Read More
                  </a>
                </button>
              </div>
            ))
        }
      </div>
      <div class="flex flex-row justify-around items-center box">
        <a href={page.url.prev} class="no-underline hover:text-secondary-900"
          ><div
            class="lar p-3 bg-slate-200 rounded-xl text-black-900 max-w-fit"
          >
            ❮ Prev
          </div>
        </a>
        <a href={page.url.next} class="no-underline">
          <div class="lar p-3 bg-slate-200 rounded-xl text-black-900 max-w-fit">
            Next ❯
          </div>
        </a>
      </div>
    </main>
    <Footer />
    <style>
      .top-border {
        border: 3px solid;
        border-image-slice: 1;
        border-width: 5px;
        border-image-source: linear-gradient(to right, #0d47a1, #f48fb1);
        border-left: 0;
        border-right: 0;
        border-bottom: 0;
        padding: 1em;
      }

      #container > div:nth-child(even) {
        background-color: #e2e8f0;
        color: #212121;
      }

      .box {
        margin-block: 1.5em;
      }
    </style>
  </body>
</html>
