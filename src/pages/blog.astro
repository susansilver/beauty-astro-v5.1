---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import BaseHead from "../components/base/BaseHead.astro";
import Header from "../components/base/Header.astro";
import Footer from "../components/base/Footer.astro";

const allPosts = (await getCollection("blog"))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 5);

const categories = [
  ...new Set(allPosts.flatMap((blog) => blog.data.categories)),
];

const allTags = [
  ...new Set(allPosts.flatMap((blogPost) => blogPost.data.tags)),
];
---

<html lang="en">
  <head>
    <BaseHead title="Blog" description="The most current essays to read" />
  </head>
  <body class="bg-white-50">
    <Header />
    <div class="grid grid-cols-12 mt-10">
      <div
        id="container"
        class="lg:flex lg:flex-wrap lg:col-span-8 col-start-2 col-span-10 lg:col-start-2 col-end-10 lg:col-end-8"
      >
        <!-- <ul class="list-none"> -->
        {
          allPosts.map((post) => (
            <>
              <div class="p-3 relative">
                <a
                  href={`/${post.slug}`}
                  class="no-underline text-black-900 visited:text-black-900 hover:text-secondary-900"
                >
                  <div class="relative lg:text-[1.563rem] xs">
                    <div class="wrap flex justify-center">
                      <Image
                        src={post.data.thumbnail}
                        alt={post.data.heroImage.alt}
                      />
                    </div>
                    <div class="absolute positioning text-balance">
                      {post.data.title}
                    </div>
                  </div>
                </a>
              </div>
            </>
          ))
        }
        <!--  </ul> -->
      </div>
      <div class="lg:col-span-3 col-span-10 col-start-2 lg:col-start-9">
        <ul class="list-none flex flex-row lg:flex-col gap-3">
          <li class="hidden lg:flex lg:flex-col">
            Categories
            <ul class="list-none">
              {
                categories.map((category) => {
                  // Check if category is defined
                  if (category) {
                    return (
                      <li>
                        <a
                          href={`/category/${category}`}
                          title={`View posts in "${category}"`}
                          class="category"
                        >
                          {category.replace(/-/g, " ")}
                        </a>
                      </li>
                    );
                  }
                  // Return null if category is not defined
                  return null;
                })
              }
            </ul>
          </li>
          <li class="hidden lg:flex lg:flex-col">
            Tags
            <ul>
              {
                allTags.map((tag) => {
                  // Check if category is defined
                  if (tag) {
                    return (
                      <li>
                        <a
                          class="tag"
                          href={`/tag/${tag}`}
                          title={`View posts tagged "${tag}"`}
                        >
                          {tag.replace(/-/g, " ")}
                        </a>
                      </li>
                    );
                  }
                  // Return null if category is not defined
                  return null;
                })
              }
            </ul>
          </li>
          <li><button class="w-full">View All ➤</button></li>
        </ul>
      </div>
    </div>
    <Footer />

    <style>
      .positioning {
        position: absolute;
        top: 50%; /* position the top  edge of the element at the middle of the parent */
        left: 50%; /* position the left edge of the element at the middle of the parent */

        transform: translate(
          -50%,
          -50%
        ); /* This is a shorthand of
                                         translateX(-50%) and translateY(-50%) */
      }

      .wrap {
        position: relative;
      }

      .wrap:after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(100, 181, 246, 0.75);
      }
      .wrap img {
        -webkit-filter: grayscale(100%);
        filter: grayscale(100%);
      }

      #container > div:first-child {
        flex-basis: 7680px;
        display: flex;
        justify-content: center;
      }

      #container > div:first-child::after {
        position: absolute;
        content: "∯ New Essay";
        background-color: #e0f2f1;
        filter: drop-shadow(#4db6ac 0.5em 0.5em 0);
        max-width: 30ch;
        /*  transform: translate(75%, -2ex);   */
        padding: 1.5em;
        bottom: 3%;
        left: 68%;
        right: 0;
      }
      .tag,
      .category {
        text-transform: capitalize;
      }
    </style>
  </body>
</html>
